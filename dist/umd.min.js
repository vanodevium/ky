(function(c,f){typeof exports=="object"&&typeof module<"u"?module.exports=f():typeof define=="function"&&define.amd?define(f):(c=typeof globalThis<"u"?globalThis:c||self,c.ky=f())})(this,function(){"use strict";class c extends Error{response;request;options;constructor(t,s,r){const o=t.status||t.status===0?t.status:"",n=t.statusText||"",i=`${o} ${n}`.trim(),a=i?`status code ${i}`:"an unknown error";super(`Request failed with ${a}: ${s.method} ${s.url}`),this.name="HTTPError",this.response=t,this.request=s,this.options=r}}class f extends Error{request;constructor(t){super(`Request timed out: ${t.method} ${t.url}`),this.name="TimeoutError",this.request=t}}const w=(()=>{let e=!1,t=!1;const s=typeof globalThis.ReadableStream=="function",r=typeof globalThis.Request=="function";if(s&&r)try{t=new globalThis.Request("https://empty.invalid",{body:new globalThis.ReadableStream,method:"POST",get duplex(){return e=!0,"half"}}).headers.has("Content-Type")}catch(o){if(o instanceof Error&&o.message==="unsupported BodyInit type")return!1;throw o}return e&&!t})(),S=typeof globalThis.AbortController=="function",k=typeof globalThis.ReadableStream=="function",E=typeof globalThis.FormData=="function",R=["get","post","put","patch","head","delete"],C={json:"application/json",text:"text/*",formData:"multipart/form-data",arrayBuffer:"*/*",blob:"*/*"},m=2147483647,A=new TextEncoder().encode("------WebKitFormBoundaryaxpyiPgbbPti10Rw").length,g=Symbol("stop"),P={json:!0,parseJson:!0,stringifyJson:!0,searchParams:!0,prefixUrl:!0,retry:!0,timeout:!0,hooks:!0,throwHttpErrors:!0,onDownloadProgress:!0,onUploadProgress:!0,fetch:!0},U={method:!0,headers:!0,body:!0,mode:!0,credentials:!0,cache:!0,redirect:!0,referrer:!0,referrerPolicy:!0,integrity:!0,keepalive:!0,signal:!0,window:!0,dispatcher:!0,duplex:!0,priority:!0},L=e=>{if(!e)return 0;if(e instanceof FormData){let t=0;for(const[s,r]of e)t+=A,t+=new TextEncoder().encode(`Content-Disposition: form-data; name="${s}"`).length,t+=typeof r=="string"?new TextEncoder().encode(r).length:r.size;return t}if(e instanceof Blob)return e.size;if(e instanceof ArrayBuffer)return e.byteLength;if(typeof e=="string")return new TextEncoder().encode(e).length;if(e instanceof URLSearchParams)return new TextEncoder().encode(e.toString()).length;if("byteLength"in e)return e.byteLength;if(typeof e=="object"&&e!==null)try{const t=JSON.stringify(e);return new TextEncoder().encode(t).length}catch{return 0}return 0},B=(e,t)=>{const s=Number(e.headers.get("content-length"))||0;let r=0;return e.status===204?(t&&t({percent:1,totalBytes:s,transferredBytes:r},new Uint8Array),new Response(null,{status:e.status,statusText:e.statusText,headers:e.headers})):new Response(new ReadableStream({async start(o){const n=e.body.getReader();t&&t({percent:0,transferredBytes:0,totalBytes:s},new Uint8Array);async function i(){const{done:a,value:u}=await n.read();if(a){o.close();return}if(t){r+=u.byteLength;const h=s===0?0:r/s;t({percent:h,transferredBytes:r,totalBytes:s},u)}o.enqueue(u),await i()}await i()}}),{status:e.status,statusText:e.statusText,headers:e.headers})},j=(e,t)=>{const s=L(e.body);let r=0;return new Request(e,{duplex:"half",body:new ReadableStream({async start(o){const n=e.body instanceof ReadableStream?e.body.getReader():new Response("").body.getReader();async function i(){const{done:a,value:u}=await n.read();if(a){t&&t({percent:1,transferredBytes:r,totalBytes:Math.max(s,r)},new Uint8Array),o.close();return}r+=u.byteLength;let h=s===0?0:r/s;(s<r||h===1)&&(h=.99),t&&t({percent:Number(h.toFixed(2)),transferredBytes:r,totalBytes:s},u),o.enqueue(u),await i()}await i()}})})},p=e=>e!==null&&typeof e=="object",l=(...e)=>{for(const t of e)if((!p(t)||Array.isArray(t))&&t!==void 0)throw new TypeError("The `options` argument must be an object");return b({},...e)},T=(e={},t={})=>{const s=new globalThis.Headers(e),r=t instanceof globalThis.Headers,o=new globalThis.Headers(t);for(const[n,i]of o.entries())r&&i==="undefined"||i===void 0?s.delete(n):s.set(n,i);return s};function d(e,t,s){return Object.hasOwn(t,s)&&t[s]===void 0?[]:b(e[s]??[],t[s]??[])}const q=(e={},t={})=>({beforeRequest:d(e,t,"beforeRequest"),beforeRetry:d(e,t,"beforeRetry"),afterResponse:d(e,t,"afterResponse"),beforeError:d(e,t,"beforeError")}),b=(...e)=>{let t={},s={},r={};for(const o of e)if(Array.isArray(o))Array.isArray(t)||(t=[]),t=[...t,...o];else if(p(o)){for(let[n,i]of Object.entries(o))p(i)&&n in t&&(i=b(t[n],i)),t={...t,[n]:i};p(o.hooks)&&(r=q(r,o.hooks),t.hooks=r),p(o.headers)&&(s=T(s,o.headers),t.headers=s)}return t},O=e=>R.includes(e)?e.toUpperCase():e,x={limit:2,methods:["get","put","head","delete","options","trace"],statusCodes:[408,413,429,500,502,503,504],afterStatusCodes:[413,429,503],maxRetryAfter:Number.POSITIVE_INFINITY,backoffLimit:Number.POSITIVE_INFINITY,delay:e=>.3*2**(e-1)*1e3},I=(e={})=>{if(typeof e=="number")return{...x,limit:e};if(e.methods&&!Array.isArray(e.methods))throw new Error("retry.methods must be an array");if(e.statusCodes&&!Array.isArray(e.statusCodes))throw new Error("retry.statusCodes must be an array");return{...x,...e}};async function v(e,t,s,r){return new Promise((o,n)=>{const i=setTimeout(()=>{s&&s.abort(),n(new f(e))},r.timeout);r.fetch(e,t).then(o).catch(n).then(()=>{clearTimeout(i)})})}async function H(e,{signal:t}){return new Promise((s,r)=>{t&&(t.throwIfAborted(),t.addEventListener("abort",o,{once:!0}));function o(){clearTimeout(n),r(t.reason)}const n=setTimeout(()=>{t?.removeEventListener("abort",o),s()},e)})}const N=(e,t)=>{const s={};for(const r in t)!(r in U)&&!(r in P)&&!(r in e)&&(s[r]=t[r]);return s};class y{static create(t,s){const r=new y(t,s),o=async()=>{if(typeof r._options.timeout=="number"&&r._options.timeout>m)throw new RangeError(`The \`timeout\` option cannot be greater than ${m}`);await Promise.resolve();let a=await r._fetch();for(const u of r._options.hooks.afterResponse){const h=await u(r.request,r._options,r._decorateResponse(a.clone()));h instanceof globalThis.Response&&(a=h)}if(r._decorateResponse(a),!a.ok&&r._options.throwHttpErrors){let u=new c(a,r.request,r._options);for(const h of r._options.hooks.beforeError)u=await h(u);throw u}if(r._options.onDownloadProgress){if(typeof r._options.onDownloadProgress!="function")throw new TypeError("The `onDownloadProgress` option must be a function");if(!k)throw new Error("Streams are not supported in your environment. `ReadableStream` is missing.");return B(a.clone(),r._options.onDownloadProgress)}return a},i=(r._options.retry.methods.includes(r.request.method.toLowerCase())?r._retry(o):o()).finally(async()=>{r.request.bodyUsed||await r.request.body?.cancel()});for(const[a,u]of Object.entries(C))i[a]=async()=>{r.request.headers.set("accept",r.request.headers.get("accept")||u);const h=await i;if(a==="json"){if(h.status===204||(await h.clone().arrayBuffer()).byteLength===0)return"";if(s.parseJson)return s.parseJson(await h.text())}return h[a]()};return i}request;abortController;_retryCount=0;_input;_options;constructor(t,s={}){if(this._input=t,this._options={...s,headers:T(this._input.headers,s.headers),hooks:q({beforeRequest:[],beforeRetry:[],beforeError:[],afterResponse:[]},s.hooks),method:O(s.method??this._input.method??"GET"),prefixUrl:String(s.prefixUrl||""),retry:I(s.retry),throwHttpErrors:s.throwHttpErrors!==!1,timeout:s.timeout??1e4,fetch:s.fetch??globalThis.fetch.bind(globalThis)},typeof this._input!="string"&&!(this._input instanceof URL||this._input instanceof globalThis.Request))throw new TypeError("`input` must be a string, URL, or Request");if(this._options.prefixUrl&&typeof this._input=="string"){if(this._input.startsWith("/"))throw new Error("`input` must not begin with a slash when using `prefixUrl`");this._options.prefixUrl.endsWith("/")||(this._options.prefixUrl+="/"),this._input=this._options.prefixUrl+this._input}if(S){const r=this._options.signal??this._input.signal;this.abortController=new globalThis.AbortController,this._options.signal=r?AbortSignal.any([r,this.abortController.signal]):this.abortController.signal}if(w&&(this._options.duplex="half"),this._options.json!==void 0&&(this._options.body=this._options.stringifyJson?.(this._options.json)??JSON.stringify(this._options.json),this._options.headers.set("content-type",this._options.headers.get("content-type")??"application/json")),this.request=new globalThis.Request(this._input,this._options),this._options.searchParams){const o="?"+(typeof this._options.searchParams=="string"?this._options.searchParams.replace(/^\?/,""):new URLSearchParams(this._options.searchParams).toString()),n=this.request.url.replace(/(?:\?.*?)?(?=#|$)/,o);(E&&this._options.body instanceof globalThis.FormData||this._options.body instanceof URLSearchParams)&&!(this._options.headers&&this._options.headers["content-type"])&&this.request.headers.delete("content-type"),this.request=new globalThis.Request(new globalThis.Request(n,{...this.request}),this._options)}if(this._options.onUploadProgress){if(typeof this._options.onUploadProgress!="function")throw new TypeError("The `onUploadProgress` option must be a function");if(!w)throw new Error("Request streams are not supported in your environment. The `duplex` option for `Request` is not available.");this.request.body&&(this.request=j(this.request,this._options.onUploadProgress))}}_calculateRetryDelay(t){if(this._retryCount++,this._retryCount>this._options.retry.limit||t instanceof f)throw t;if(t instanceof c){if(!this._options.retry.statusCodes.includes(t.response.status))throw t;const r=t.response.headers.get("Retry-After")??t.response.headers.get("RateLimit-Reset")??t.response.headers.get("X-RateLimit-Reset")??t.response.headers.get("X-Rate-Limit-Reset");if(r&&this._options.retry.afterStatusCodes.includes(t.response.status)){let o=Number(r)*1e3;Number.isNaN(o)?o=Date.parse(r)-Date.now():o>=Date.parse("2024-01-01")&&(o-=Date.now());const n=this._options.retry.maxRetryAfter??o;return o<n?o:n}if(t.response.status===413)throw t}const s=this._options.retry.delay(this._retryCount);return Math.min(this._options.retry.backoffLimit,s)}_decorateResponse(t){return this._options.parseJson&&(t.json=async()=>this._options.parseJson(await t.text())),t}async _retry(t){try{return await t()}catch(s){const r=Math.min(this._calculateRetryDelay(s),m);if(this._retryCount<1)throw s;await H(r,{signal:this._options.signal});for(const o of this._options.hooks.beforeRetry)if(await o({request:this.request,options:this._options,error:s,retryCount:this._retryCount})===g)return;return this._retry(t)}}async _fetch(){for(const r of this._options.hooks.beforeRequest){const o=await r(this.request,this._options);if(o instanceof Request){this.request=o;break}if(o instanceof Response)return o}const t=N(this.request,this._options),s=this.request;return this.request=s.clone(),this._options.timeout===!1?this._options.fetch(s,t):v(s,t,this.abortController,this._options)}}/*! MIT License © Sindre Sorhus */const _=e=>{const t=(s,r)=>y.create(s,l(e,r));for(const s of R)t[s]=(r,o)=>y.create(r,l(e,o,{method:s}));return t.create=s=>_(l(s)),t.extend=s=>(typeof s=="function"&&(s=s(e??{})),_(l(e,s))),t.stop=g,t};return _()});
